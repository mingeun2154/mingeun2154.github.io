<feed xmlns="http://www.w3.org/2005/Atom"> <id>/</id><title>Mingeun2154</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2022-03-22T09:56:04+09:00</updated> <author> <name>Mingeun Park</name> <uri>/</uri> </author><link rel="self" type="application/atom+xml" href="/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2022 Mingeun Park </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>baduk 프로젝트 - 2주차</title><link href="/posts/baduk-2nd-week/" rel="alternate" type="text/html" title="baduk 프로젝트 - 2주차" /><published>2022-03-12T21:34:00+09:00</published> <updated>2022-03-12T21:34:00+09:00</updated> <id>/posts/baduk-2nd-week/</id> <content src="/posts/baduk-2nd-week/" /> <author> <name>Mingeun Park</name> </author> <category term="Project" /> <category term="baduk" /> <summary> 3.3부터 3.12까지 진행된 내용이다. 새로운 기능 추가 사용자가 클릭한 위치에 돌을 놓는 기능을 추가하였다. 돌을 놓는 행위를 바둑에서는 ‘착수’ 라고 한다. abstraction 아래의 사진은 component들의 호출 과정이다. 그림에서는 생략되었지만 마지막으로 controller가 repaint()를 실행하여 domain의 변화를 view에 반영한다. underlying details CheckerBoardController (controller) 클릭된 위치는 크기가 interval×interval인 정사각형 구역 단위로 인식된다. 예를 들어 위치가 (46,131)인 점이 클릭되었다면3행 7열의 구역이 클릭된 것으로 인식한다. ... </summary> </entry> <entry><title>baduk 프로젝트 - 1주차</title><link href="/posts/baduk-1st-week/" rel="alternate" type="text/html" title="baduk 프로젝트 - 1주차" /><published>2022-03-03T00:04:00+09:00</published> <updated>2022-03-22T09:50:15+09:00</updated> <id>/posts/baduk-1st-week/</id> <content src="/posts/baduk-1st-week/" /> <author> <name>Mingeun Park</name> </author> <category term="Project" /> <category term="baduk" /> <summary> 바둑판 프로그램을 시작한지 1주일이 지났다. 그동안 진행된 내용들이다. component design 단계와 비교해서 다음과 같이 바뀌었다. View (추가됨) : Swing Container들의 집합이다. xxxScreen 클래스들은 ‘xxx화면’을 나타낸다. 예를 들어 StartScreen은 시작화면을, NewGameScreen은 시작화면에서 ‘새 게임’ 버튼을 눌렀을때 나오는 화면이다. MainFrame 클래스는 JFrame 객체이다. 최상위 컨테이너로 프로그램이 실행되는 창(window)를 의미한다. content (추가됨) : 각각의 화면을 구성하는 Swing Component들이다. 이 객체들은 view 객체들이 생성될 때 그 객체들에 add된다. TestF... </summary> </entry> <entry><title>JFrame의 구조</title><link href="/posts/JFrame-1/" rel="alternate" type="text/html" title="JFrame의 구조" /><published>2022-02-28T14:31:00+09:00</published> <updated>2022-02-28T14:31:00+09:00</updated> <id>/posts/JFrame-1/</id> <content src="/posts/JFrame-1/" /> <author> <name>Mingeun Park</name> </author> <category term="Project" /> <category term="baduk" /> <summary> Swing은 Java에서 GUI를 구현하기 위해 JDK에서 기본적으로 제공하는 툴킷이다. Swing으로 표현하는 GUI는 다음과 같은 구조를 가진다. JFrame 하나의 window(창)이다. </summary> </entry> <entry><title>baduk 프로젝트 - 설계</title><link href="/posts/baduk-design/" rel="alternate" type="text/html" title="baduk 프로젝트 - 설계" /><published>2022-02-24T15:57:00+09:00</published> <updated>2022-03-03T01:01:50+09:00</updated> <id>/posts/baduk-design/</id> <content src="/posts/baduk-design/" /> <author> <name>Mingeun Park</name> </author> <category term="Project" /> <category term="baduk" /> <summary> Java의 Swing 라이브러리를 사용해 바둑을 연습할 수 있는 프로그램이다. 핵심 기능 착수 차례 알려주기 시간 제한 뒤로가기, 앞으로 전체 내용 저장 및 불러오기 Service Flow Components MVC 패턴을 적용하여 패키지를 다음 components로 나누었다. controller : 사용자로부터 받은 입력을 처리한다. service : domain을 조작하여 game logic 을 구현한다. repository : domain의 상태를 저장소에 저장한다. 저장소는 사용자의 pc를 사용할 예정이다. interface로 만들어 추후에 저장소를 바꿀수 있도록 한다. domain : 게임을 구성하는 요소들이다. data... </summary> </entry> <entry><title>MVC Pattern</title><link href="/posts/MVC/" rel="alternate" type="text/html" title="MVC Pattern" /><published>2022-02-24T15:20:00+09:00</published> <updated>2022-02-24T15:20:00+09:00</updated> <id>/posts/MVC/</id> <content src="/posts/MVC/" /> <author> <name>Mingeun Park</name> </author> <category term="WEB" /> <summary> MVC(Model View Controll)은 프로그램을 설계하는 방식 중 하나이다. MVC 패턴은 프로그램의 구성요소를 Model, View, Controller 세 가지로 구분한다. 사용자의 입력을 controller에서 받아 Model을 조작하고, Model의 조작된 data를 바탕으로 View는 사용자에게 결과를 출력한다. 하나하나의 구성 요소들마다 하는 일이 명확하게 분리되기 때문에 코드의 유지, 보수가 간편해진다. 웹 페이지 소스를 HTML, CSS, JavaScript 세 가지로 분리한 것과 유사하다. HTML은 정보(Model)만을, CSS는 눈에 보이는 시각적 요소(View)를, JavaScript는 사용자와의 상호작용 및 HTML, CSS 조작(Controller)을 담당... </summary> </entry> </feed>
